?RCS:
?RCS: Copyright (c) 2015 Raphael Manfredi
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?MAKE:d_dirent_d_namlen: Trylink cat i_dirent
?MAKE:	-pick add $@ %<
?S:d_dirent_d_namlen:
?S:	This variable conditionally defines the HAS_DIRENT_D_NAMLEN symbol,
?S:	which indicates to the C program that struct dirent has an
?S:	integer member d_namlen.  Better check for HAS_DIRENT_D_NAMLEN than
?S:	DIRNAMLEN since the latter has a weaker test not involving compilation.
?S:.
?C:HAS_DIRENT_D_NAMLEN:
?C:	This symbol, if defined, indicates that struct dirent has an
?C:	integer member d_namlen to hold the actual string length of d_name.
?C:.
?H:#$d_dirent_d_namlen HAS_DIRENT_D_NAMLEN		/**/
?H:.
?LINT:set d_dirent_d_namlen
: check whether struct dirent has a member d_namlen.
$cat >try.c <<EOC
#include <sys/types.h>
#$i_dirent I_DIRENT
#ifdef I_DIRENT
#include <dirent.h>
#endif
int main(void)
{
  static struct dirent dir_entry;
  dir_entry.d_namlen |= 1;
  return 0;
}
EOC
cyn="whether struct dirent has a d_namlen member"
set d_dirent_d_namlen
eval $trylink

