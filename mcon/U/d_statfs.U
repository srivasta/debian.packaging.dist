?RCS: $Id$
?RCS:
?RCS: Copyright (c) 2006, Christian Biere
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?MAKE:d_statfs: Trylink cat i_sysmount i_sysparam i_sysvfs
?MAKE:	-pick add $@ %<
?S:d_statfs:
?S:	This variable conditionally defines the HAS_STATFS symbol, which
?S:	indicates to the C program that the statfs() system call is available.
?S:.
?C:HAS_STATFS:
?C:	This symbol, if defined, indicates that the Linux statfs() system call
?C:	is available to get filesystem statistics.
?C:.
?H:#$d_statfs HAS_STATFS		/**/
?H:.
?LINT:set d_statfs
: see if statfs exists
$cat >try.c <<EOC
#$i_sysparam I_SYS_PARAM
#ifdef I_SYS_PARAM
#include <sys/param.h>
#endif
#$i_sysmount I_SYS_MOUNT
#ifdef I_SYS_MOUNT
#include <sys/mount.h>
#endif
#$i_sysvfs I_SYS_VFS
#ifdef I_SYS_VFS
#include <sys/vfs.h>
#endif
int main(void)
{
	static int ret;
	static char *p;
	static struct statfs buf;
	ret |= statfs(p, &buf);
	return ret ? 0 : 1;
}
EOC
cyn=statfs
set d_statfs 
eval $trylink

