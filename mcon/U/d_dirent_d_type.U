?RCS: $Id$
?RCS:
?RCS: Copyright (c) 2006, Christian Biere
?RCS:
?RCS: You may redistribute only under the terms of the Artistic License,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic License; a copy of which may be found at the root
?RCS: of the source tree for dist 4.0.
?RCS:
?MAKE:d_dirent_d_type: Trylink cat i_dirent
?MAKE:	-pick add $@ %<
?S:d_dirent_d_type:
?S:	This variable conditionally defines the HAS_DIRENT_D_TYPE symbol,
?S:	which indicates to the C program that struct dirent has an
?S:	integer member d_type.
?S:.
?C:HAS_DIRENT_D_TYPE:
?C:	This symbol, if defined, indicates that struct dirent has an
?C:	integer member d_type.  Note that DT_WHT is BSD-specific and may
?C:	not be available.  If DT_UNKNOWN is returned, the filesystem does
?C:	not fill d_type even though it is present in the dir entry.
?C:.
?H:#$d_dirent_d_type HAS_DIRENT_D_TYPE		/**/
?H:.
?LINT:set d_dirent_d_type
: check whether struct dirent has a member d_type.
$cat >try.c <<EOC
#include <sys/types.h>
#$i_dirent I_DIRENT
#ifdef I_DIRENT
#include <dirent.h>
#endif
int main(void)
{
  static struct dirent dir_entry;
  dir_entry.d_type |= 1
	| DT_UNKNOWN
	| DT_FIFO
	| DT_CHR
	| DT_DIR
	| DT_BLK
	| DT_REG
	| DT_LNK
	| DT_SOCK;
  return 0;
}
EOC
cyn="whether struct dirent has a d_type member"
set d_dirent_d_type
eval $trylink

