.\" $Id$
.\"
.\"  Copyright (c) 1991-1997, 2004-2006, Raphael Manfredi
.\"  
.\"  You may redistribute only under the terms of the Artistic Licence,
.\"  as specified in the README file that comes with the distribution.
.\"  You may reuse parts of this distribution only within the terms of
.\"  that same Artistic Licence; a copy of which may be found at the root
.\"  of the source tree for dist 4.0.
.\"
.\" $Log: jmkmf.man,v $
.\" Revision 3.0.1.1  1995/05/12  11:58:03  ram
.\" patch54: updated my e-mail address
.\"
.\" Revision 3.0  1993/08/18  12:04:20  ram
.\" Baseline for dist 3.0 netwide release.
.\"
.TH JMKMF 1 ram
.SH NAME
jmkmf \- runs jmake with the correct options
.SH SYNOPSIS
.B jmkmf
[
.I top-level dir
[
.I current dir
]
]
.SH DESCRIPTION
.I Jmkmf
is a wrapper which calls
.I jmake
with the correct options, defining the symbols
.SM TOPDIR
(location of the top-level directory) and
.SM CURDIR
(current directory). The generated
.I Makefile.SH
is then ran through
.I /bin/sh
to produce a
.I Makefile.
.PP
.I Jmkmf
is useful when you generate a makefile for the first time.
.PP
When ran without arguments,
.I jmkmf
will scan the directories upwards, looking for a .package file marking
the top of your sources.  It will then derive the top-level directory
and the name of the current directory by itself.
.PP
Once you have a
.I Makefile.SH
generated by
.I jmake,
and have run Configure already, you can use
.I make Makefile.SH
to build the Makefile.SH again and
.I make Makefile
to run the Makefile.SH through
.I /bin/sh.
To use the recursive commands, you have to append an 's' at the
end of the name as in
.I make Makefiles.SH
and
.I make Makefiles.
.SH AUTHOR
Raphael Manfredi <Raphael.Manfredi@pobox.com>
.SH FILES
.PD 0
.TP 20
Jmakefile
High level description of makefile
.TP
.package
The file marking the top of your package tree
.PD
.SH "SEE ALSO"
jmake(1), packinit(1).
